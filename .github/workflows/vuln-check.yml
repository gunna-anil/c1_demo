name: Vulnerability & CodeQL Check (SARIF only)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  vuln-codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Download and run Grype to generate vulnerability JSON
      - name: Download and run Grype scan
        run: |
          GRYPE_VERSION=$(curl -s https://api.github.com/repos/anchore/grype/releases/latest | grep tag_name | cut -d '"' -f4)
          echo "Using Grype version: $GRYPE_VERSION"
          curl -sSfL "https://github.com/anchore/grype/releases/download/${GRYPE_VERSION}/grype_${GRYPE_VERSION#v}_linux_amd64.tar.gz" -o grype.tar.gz
          tar -xzf grype.tar.gz
          chmod +x grype
          ./grype . -o json > grype-output.json
      # Step 2: Setup Node.js and install script dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies for scripts
        run: npm install
        working-directory: ./scripts

      # Step 3: Generate CodeQL query from Grype output
      - name: Generate CodeQL query
        run: node scripts/generate_codeql_from_grype.js

      # Debug: Show contents of all queries in queries/ folder
      - name: List all CodeQL queries
        run: ls -l queries/ && cat queries/*.ql

      # Step 4: Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      # Step 5: Run all queries in queries/ folder
      - name: Perform CodeQL analysis (SARIF)
        uses: github/codeql-action/analyze@v3
        with:
          queries: queries/CheckVulnerablePkgs.ql

      # Debug: List SARIF files for verification
      - name: List SARIF files and preview
        run: find . -name '*.sarif' && head -40 results/*.sarif || true

      # Step 6: Upload SARIF results as artifact
      - name: Upload CodeQL SARIF artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: .sarif
