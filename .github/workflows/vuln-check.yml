name: Vulnerability & CodeQL Query Automation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  vuln-codeql:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Grype Scan
      - name: Download and run Grype scan
        run: |
          GRYPE_VERSION=$(curl -s https://api.github.com/repos/anchore/grype/releases/latest | grep tag_name | cut -d '"' -f4)
          echo "Using Grype version: $GRYPE_VERSION"
          curl -sSfL "https://github.com/anchore/grype/releases/download/${GRYPE_VERSION}/grype_${GRYPE_VERSION#v}_linux_amd64.tar.gz" -o grype.tar.gz
          tar -xzf grype.tar.gz
          chmod +x grype
          ./grype . -o json > grype-output.json

      # Node.js for automation scripts
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install script dependencies
      - name: Install script dependencies
        run: npm install
        working-directory: ./scripts

      # Generate CodeQL Query from Grype output
      - name: Generate CodeQL query from Grype results
        run: node scripts/generate_codeql_from_grype.js
        # Expects grype-output.json in repo root
        # Outputs queries/CheckVulnerablePkgs.ql

      # Show generated query (debug)
      - name: Show generated CodeQL query
        run: head -20 queries/CheckVulnerablePkgs.ql

      # CodeQL: Initialize database (points to generated query)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: ./queries/CheckVulnerablePkgs.ql

      # CodeQL analysis
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3

      # Move SARIF to desired output and rename to .json
      - name: Move SARIF results to output folder as JSON
        run: |
          mkdir -p codeql-json-output
          SARIF_FILE=$(find . -type f -name '*.sarif' | grep results/ | head -1)
          if [ -f "$SARIF_FILE" ]; then
            mv "$SARIF_FILE" codeql-json-output/codeql-output.json
          else
            echo "SARIF output not found!"
            exit 1
          fi

      # Upload only the CodeQL output as JSON
      - name: Upload CodeQL JSON results
        uses: actions/upload-artifact@v4
        with:
          name: codeql-output-json
          path: codeql-json-output/codeql-output.json
