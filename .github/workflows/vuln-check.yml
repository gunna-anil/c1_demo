name: Vulnerability & CodeQL Query Automation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  vuln-codeql-cli:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Grype Scan
      - name: Download and run Grype scan
        run: |
          GRYPE_VERSION=$(curl -s https://api.github.com/repos/anchore/grype/releases/latest | grep tag_name | cut -d '"' -f4)
          echo "Using Grype version: $GRYPE_VERSION"
          curl -sSfL "https://github.com/anchore/grype/releases/download/${GRYPE_VERSION}/grype_${GRYPE_VERSION#v}_linux_amd64.tar.gz" -o grype.tar.gz
          tar -xzf grype.tar.gz
          chmod +x grype
          ./grype . -o json > grype-output.json

      # Node.js for automation scripts
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install script dependencies
      - name: Install script dependencies
        run: npm install
        working-directory: ./scripts

      # Generate CodeQL Query from Grype output
      - name: Generate CodeQL query from Grype results
        run: node scripts/generate_codeql_from_grype.js

      # Download CodeQL CLI
      - name: Download CodeQL CLI
        run: |
          wget https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.zip
          unzip codeql-linux64.zip
          echo "$PWD/codeql" >> $GITHUB_PATH

      # Create CodeQL database
      - name: Create CodeQL database
        run: |
          ./codeql/codeql database create db --language=javascript --source-root=.

      # Run CodeQL Query (produces .bqrs result)
      - name: Run CodeQL Query
        run: |
          ./codeql/codeql query run queries/CheckVulnerablePkgs.ql --database=db --output=result.bqrs

      # Convert .bqrs to JSON
      - name: Convert BQRS to JSON
        run: |
          ./codeql/codeql bqrs decode result.bqrs --format=json > codeql-json-output/codeql-output.json

      # Upload only the CodeQL output as JSON
      - name: Upload CodeQL JSON results
        uses: actions/upload-artifact@v4
        with:
          name: codeql-output-json
          path: codeql-json-output/codeql-output.json
